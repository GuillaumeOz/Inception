user                            www;
worker_processes                auto; # it will be determinate automatically by the number of core
error_log                       /dev/stdout warn;
pid                             /var/run/nginx/nginx.pid; # it permit you to use /etc/init.d/nginx reload|restart|stop|start, also solve a bug

events {
    worker_connections          1024;
}

http {
    include                     /etc/nginx/mime.types;
    default_type                application/octet-stream;
    sendfile                    on;
	access_log					/dev/stdout;
    keepalive_timeout           3000;
    proxy_set_header            Host $http_host;
    proxy_set_header            X-Forwarded-Host $http_host;

	server #The server context will define a specific virtual to handle client requests.
	{
			listen 80; #Set the port where the server accepts requests
			listen [::]:80; #Same as before but  ([::]:) specifies that you listen on IPV6 Address

			server_name gozsertt.42.fr; #Set the "server_name" varible to the private address gozsertt.42.fr #/etc/host DNS

			return 301 https://$server_name$request_uri; # 301 (Moved Permanently) Use the "$server_name" variable and "$request_uri".
	}

	server
	{
			listen 443 ssl; #To configure an HTTPS server, the ssl parameter must be enabled on listening sockets
			listen [::]:443 ssl; #For IPv6 address with ssl parameter

			ssl_certificate /etc/nginx/ssl/gozsertt.crt; #This is the Path to your SSL certificate
			ssl_certificate_key /etc/nginx/ssl/gozsertt.key; #Path to the SSL Key, these two line are mandatory for Nginx can find SSL informations
			ssl_protocols TLSv1.2 TLSv1.3; #Enables the specified protocols.

			server_name gozsertt.42.fr; #Same as below, define for this server.

			autoindex on; #Set the autoindex, when its on, you'll see the on website main page the path to each service URL.

			root /var/www/; #define the root derectory for the website, and then example url for subdirectory.
			index index.php index.html index.htm; #define all of the index page.

			location /
			{
				try_files $uri $uri/ =404; #Checks the existence of files (uri -> directory), if doesn't exit send error 404.
			}

			location ~ \.php$
			{
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass wordpress:9000;
                fastcgi_index index.php;

                fastcgi_intercept_errors        on;
                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param PATH_INFO $fastcgi_path_info;
            }

	}

}
